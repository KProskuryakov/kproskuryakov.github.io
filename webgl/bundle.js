!function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=33)}({11:function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.setGL=function(e){const t=document.getElementById(e);if(!t)throw new Error("Failed to find canvas with that id.");const n=t.getContext("webgl2");if(!n)throw new Error("Failed to create gl context");r.canvas=t,r.gl=n;const{width:o,height:l}=t;r.gl.viewport(0,0,o,l)}},33:function(e,r,t){"use strict";var n=this&&this.__awaiter||function(e,r,t,n){return new(t||(t=Promise))(function(o,l){function a(e){try{c(n.next(e))}catch(e){l(e)}}function i(e){try{c(n.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(r){r(e.value)}).then(a,i)}c((n=n.apply(e,r||[])).next())})};Object.defineProperty(r,"__esModule",{value:!0}),t(11).setGL("canvas-gl");const o=t(11),l=t(34),a=o.gl.createVertexArray();o.gl.bindVertexArray(a);const i=o.gl.createBuffer();o.gl.bindBuffer(o.gl.ARRAY_BUFFER,i),o.gl.bufferData(o.gl.ARRAY_BUFFER,new Float32Array([.5,.5,0,1,0,0,.5,-.5,0,0,1,0,-.5,.5,0,0,0,1]),o.gl.STATIC_DRAW),o.gl.vertexAttribPointer(0,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),o.gl.enableVertexAttribArray(0),o.gl.vertexAttribPointer(1,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),o.gl.enableVertexAttribArray(1);const c=o.gl.createVertexArray();o.gl.bindVertexArray(c);const g=o.gl.createBuffer();o.gl.bindBuffer(o.gl.ARRAY_BUFFER,g),o.gl.bufferData(o.gl.ARRAY_BUFFER,new Float32Array([.5,-.5,0,0,1,0,-.5,-.5,0,1,0,0,-.5,.5,0,0,0,1]),o.gl.STATIC_DRAW),o.gl.vertexAttribPointer(0,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),o.gl.enableVertexAttribArray(0),o.gl.vertexAttribPointer(1,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),o.gl.enableVertexAttribArray(1),o.gl.bindBuffer(o.gl.ARRAY_BUFFER,null),o.gl.bindBuffer(o.gl.ELEMENT_ARRAY_BUFFER,null),o.gl.bindVertexArray(null),function(){n(this,void 0,void 0,function*(){const e=t(35);console.log(e);const r=yield l.getShader("../src/webgl/shaders/v1.glsl","../src/webgl/shaders/f1.glsl"),n=yield l.getShader("../src/webgl/shaders/v1.glsl","../src/webgl/shaders/f2.glsl"),i=e=>{o.gl.clearColor(.2,.3,.3,1),o.gl.clear(o.gl.COLOR_BUFFER_BIT);const t=Math.sin(e/1e3)/2+.5;r.use(),o.gl.bindVertexArray(a),o.gl.drawArrays(o.gl.TRIANGLES,0,3),n.use(),n.setFloat("greenVal",t),o.gl.bindVertexArray(c),o.gl.drawArrays(o.gl.TRIANGLES,0,3),window.requestAnimationFrame(i)};window.requestAnimationFrame(i)})}()},34:function(e,r,t){"use strict";var n=this&&this.__awaiter||function(e,r,t,n){return new(t||(t=Promise))(function(o,l){function a(e){try{c(n.next(e))}catch(e){l(e)}}function i(e){try{c(n.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(r){r(e.value)}).then(a,i)}c((n=n.apply(e,r||[])).next())})};Object.defineProperty(r,"__esModule",{value:!0});const o=t(11),l=new Map;function a(e){return n(this,void 0,void 0,function*(){const r=l.get(e);if(r)return r;const t=yield window.fetch(e),n=yield t.text();return l.set(e,n),n})}class i{constructor(e){this.program=e}use(){o.gl.useProgram(this.program)}setFloat(e,r){o.gl.uniform1f(o.gl.getUniformLocation(this.program,e),r)}}function c(e,r){const t=o.gl.createShader(e);return o.gl.shaderSource(t,r),o.gl.compileShader(t),0!==o.gl.getShaderParameter(t,o.gl.COMPILE_STATUS)&&console.error(o.gl.getShaderInfoLog(t)),t}r.Shader=i,r.getShader=function(e,r){return n(this,void 0,void 0,function*(){const[t,n]=yield Promise.all([a(e),a(r)]);console.log(t);const l=function(e,r){const t=c(o.gl.VERTEX_SHADER,e),n=c(o.gl.FRAGMENT_SHADER,r),l=o.gl.createProgram();o.gl.attachShader(l,t),o.gl.attachShader(l,n),o.gl.linkProgram(l),0!==o.gl.getProgramParameter(l,o.gl.LINK_STATUS)&&console.error(o.gl.getProgramInfoLog(l));return o.gl.deleteShader(t),o.gl.deleteShader(n),l}(t,n);return new i(l)})}},35:function(e,r,t){"use strict";t.r(r),r.default="#version 300 es\r\nprecision highp float;\r\nout vec4 FragColor;\r\nin vec3 ourColor;\r\n\r\nvoid main()\r\n{\r\n\tFragColor = vec4(ourColor, 1.0);\r\n}\r\n"}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,