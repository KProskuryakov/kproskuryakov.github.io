!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=33)}({11:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setGL=t.canvas=t.gl=void 0,t.setGL=function(e){const r=document.getElementById(e);if(!r)throw new Error("Failed to find canvas with that id.");const n=r.getContext("webgl2");if(!n)throw new Error("Failed to create gl context");t.canvas=r,t.gl=n;const{width:o,height:l}=r;t.gl.viewport(0,0,o,l)}},33:function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,l){function a(e){try{g(n.next(e))}catch(e){l(e)}}function i(e){try{g(n.throw(e))}catch(e){l(e)}}function g(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}g((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});r(11).setGL("canvas-gl");const o=r(11),l=r(34),a=o.gl.createVertexArray();o.gl.bindVertexArray(a);const i=o.gl.createBuffer();o.gl.bindBuffer(o.gl.ARRAY_BUFFER,i),o.gl.bufferData(o.gl.ARRAY_BUFFER,new Float32Array([.5,.5,0,1,0,0,.5,-.5,0,0,1,0,-.5,.5,0,0,0,1]),o.gl.STATIC_DRAW),o.gl.vertexAttribPointer(0,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),o.gl.enableVertexAttribArray(0),o.gl.vertexAttribPointer(1,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),o.gl.enableVertexAttribArray(1);const g=o.gl.createVertexArray();o.gl.bindVertexArray(g);const c=o.gl.createBuffer();o.gl.bindBuffer(o.gl.ARRAY_BUFFER,c),o.gl.bufferData(o.gl.ARRAY_BUFFER,new Float32Array([.5,-.5,0,0,1,0,-.5,-.5,0,1,0,0,-.5,.5,0,0,0,1]),o.gl.STATIC_DRAW),o.gl.vertexAttribPointer(0,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),o.gl.enableVertexAttribArray(0),o.gl.vertexAttribPointer(1,3,o.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),o.gl.enableVertexAttribArray(1),o.gl.bindBuffer(o.gl.ARRAY_BUFFER,null),o.gl.bindBuffer(o.gl.ELEMENT_ARRAY_BUFFER,null),o.gl.bindVertexArray(null),function(){n(this,void 0,void 0,(function*(){const e=yield l.getShader("/assets/webgl/shaders/v1.glsl","/assets/webgl/shaders/f1.glsl"),t=yield l.getShader("/assets/webgl/shaders/v1.glsl","/assets/webgl/shaders/f2.glsl"),r=n=>{o.gl.clearColor(.2,.3,.3,1),o.gl.clear(o.gl.COLOR_BUFFER_BIT);const l=Math.sin(n/1e3)/2+.5;e.use(),o.gl.bindVertexArray(a),o.gl.drawArrays(o.gl.TRIANGLES,0,3),t.use(),t.setFloat("greenVal",l),o.gl.bindVertexArray(g),o.gl.drawArrays(o.gl.TRIANGLES,0,3),window.requestAnimationFrame(r)};window.requestAnimationFrame(r)}))}()},34:function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,l){function a(e){try{g(n.next(e))}catch(e){l(e)}}function i(e){try{g(n.throw(e))}catch(e){l(e)}}function g(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}g((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getShader=t.Shader=void 0;const o=r(11),l=new Map;function a(e){return n(this,void 0,void 0,(function*(){const t=l.get(e);if(t)return t;const r=yield window.fetch(e),n=yield r.text();return l.set(e,n),n}))}class i{constructor(e){this.program=e}use(){o.gl.useProgram(this.program)}setFloat(e,t){o.gl.uniform1f(o.gl.getUniformLocation(this.program,e),t)}}function g(e,t){const r=o.gl.createShader(e);return o.gl.shaderSource(r,t),o.gl.compileShader(r),0!==o.gl.getShaderParameter(r,o.gl.COMPILE_STATUS)&&console.error(o.gl.getShaderInfoLog(r)),r}t.Shader=i,t.getShader=function(e,t){return n(this,void 0,void 0,(function*(){const[r,n]=yield Promise.all([a(e),a(t)]);console.log(r);const l=function(e,t){const r=g(o.gl.VERTEX_SHADER,e),n=g(o.gl.FRAGMENT_SHADER,t),l=o.gl.createProgram();o.gl.attachShader(l,r),o.gl.attachShader(l,n),o.gl.linkProgram(l),0!==o.gl.getProgramParameter(l,o.gl.LINK_STATUS)&&console.error(o.gl.getProgramInfoLog(l));return o.gl.deleteShader(r),o.gl.deleteShader(n),l}(r,n);return new i(l)}))}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,